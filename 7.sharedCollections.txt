package test;

import java.util.*;  

class addToCollection{  
    ArrayList<Integer> list=new ArrayList<Integer>();
 synchronized void printTable(int n){//synchronized method  
    try{  
      Thread.sleep(400);  
     }catch(InterruptedException  e){System.out.println(e);} 
    list.add(n);//Adding object in arraylist  
  System.out.println(list);  
 }  
//wait();
 
 public void printcoll()
 {
    System.out.println(list); 
 }
}  

class Thread1 extends Thread{  
addToCollection t;  
Thread1(addToCollection t){  
this.t=t;  
}  
public void run(){ 
    
t.printTable(5);  
//notify(); 
}  
  
}  
class Thread2 extends Thread{  
addToCollection t;  
Thread2(addToCollection t){  
this.t=t;  
}  
public void run(){  
 //   wait();
t.printTable(10);  
}  
}  

class Thread3 extends Thread{  
addToCollection t;  
Thread3(addToCollection t){  
this.t=t;  
}  
public void run(){  
	try {
		sleep(1000);
	} catch (InterruptedException e) {
		
		e.printStackTrace();
	}
t.printTable(15);  
}  
}  

public class sharedcollection{  
public static void main(String args[]){  
addToCollection obj= new addToCollection(); 
Thread1 t1=new Thread1(obj);  
Thread2 t2=new Thread2(obj); 
Thread3 t3=new Thread3(obj);  
t1.start();  
t2.start();  
t3.start(); 
//obj.printcoll();
//System.out.println(list);
}  
}